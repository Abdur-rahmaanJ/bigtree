Search.setIndex({"docnames": ["bigtree/dag/construct", "bigtree/dag/export", "bigtree/node/basenode", "bigtree/node/dagnode", "bigtree/node/node", "bigtree/tree/construct", "bigtree/tree/export", "bigtree/tree/helper", "bigtree/tree/modify", "bigtree/tree/search", "bigtree/utils/iterators", "bigtree/workflows/app_todo", "dag", "index", "node", "others", "others/merging_trees", "others/tips", "others/weighted_trees", "tree", "utils", "workflows"], "filenames": ["bigtree/dag/construct.rst", "bigtree/dag/export.rst", "bigtree/node/basenode.rst", "bigtree/node/dagnode.rst", "bigtree/node/node.rst", "bigtree/tree/construct.rst", "bigtree/tree/export.rst", "bigtree/tree/helper.rst", "bigtree/tree/modify.rst", "bigtree/tree/search.rst", "bigtree/utils/iterators.rst", "bigtree/workflows/app_todo.rst", "dag.rst", "index.rst", "node.rst", "others.rst", "others/merging_trees.md", "others/tips.rst", "others/weighted_trees.md", "tree.rst", "utils.rst", "workflows.rst"], "titles": ["\u2728 Construct", "\ud83d\udd28 Export", "\ud83c\udf31 BaseNode", "\ud83c\udf3c DAGNode", "\ud83c\udf3a Node", "\u2728 Construct", "\ud83d\udd28 Export", "\ud83d\udd27 Helper", "\ud83d\udcdd Modify", "\ud83d\udd0d Search", "\u27b0 Iterators", "\u2714\ufe0f To Do App", "Directed Acyclic Graph (DAG)", "\ud83c\udf33 Big Tree Documentation", "Node", "Others", "Merging Trees", "\ud83d\udca1 Tips and Tricks", "Trees with Weighted Edges", "Tree", "Utils", "Workflows"], "terms": {"direct": [0, 1, 6, 10, 13], "acycl": [0, 1, 10, 13], "graph": [0, 1, 6, 10, 13, 17, 18], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18], "list": [0, 1, 2, 3, 5, 6, 8, 10, 11, 13], "dictionari": [0, 1, 2, 3, 4, 5, 6, 13, 17, 18], "panda": [0, 1, 2, 4, 5, 6, 13], "datafram": [0, 1, 2, 4, 5, 6, 13], "us": [0, 2, 3, 4, 5, 6, 8, 13, 16, 17], "parent": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18], "child": [0, 1, 2, 3, 5, 6, 9, 10, 13, 17, 18], "relat": [0, 5, 13], "add": [0, 11, 13, 17, 18], "node": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18], "attribut": [0, 1, 2, 3, 4, 6, 9, 10, 13, 17, 18], "list_to_dag": [0, 12, 13], "No": [0, 1, 5, 6], "dict_to_dag": [0, 12, 13], "ye": [0, 1, 5, 6], "dataframe_to_dag": [0, 12, 13], "These": [0, 2, 3, 4, 5], "function": [0, 1, 5, 6, 7, 8, 9, 10, 13], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17], "standalon": [0, 5], "under": [0, 5], "hood": [0, 5], "thei": [0, 2, 3, 4, 5, 13], "have": [0, 1, 2, 3, 4, 5, 6, 10, 13, 16, 17, 18], "follow": [0, 5, 13], "depend": [0, 5, 13], "bigtre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18], "data": [0, 5, 6, 10, 13], "core": [0, 5], "frame": [0, 5], "child_col": [0, 5], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "none": [0, 1, 2, 3, 5, 6, 8, 9, 10, 13], "parent_col": [0, 1, 5, 6, 13], "attribute_col": [0, 5], "node_typ": [0, 5, 7], "type": [0, 5, 6, 7, 13], "dagnod": [0, 1, 10, 13, 14], "class": [0, 2, 3, 4, 5, 11, 13, 17, 18], "note": [0, 1, 5, 10], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18], "must": [0, 1, 2, 3, 5, 7, 8, 9, 10], "uniqu": [0, 1, 5, 7, 8, 10], "specifi": [0, 5, 6, 8], "column": [0, 1, 5, 6, 13], "If": [0, 2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17], "take": [0, 5, 6, 9, 10], "first": [0, 5, 10, 11, 13], "second": [0, 5], "all": [0, 1, 2, 3, 4, 5, 6, 7, 10], "other": [0, 2, 3, 4, 5, 6, 13, 16, 17], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18], "pd": [0, 1, 5, 6, 13], "dag_iter": [0, 10, 13, 20], "relation_data": [0, 5], "1": [0, 1, 2, 6, 9, 10, 11, 13, 17, 18], "b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18], "c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18], "2": [0, 1, 6, 10, 13, 17, 18], "d": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 16, 17, 18], "e": [0, 1, 5, 6, 10, 13, 16, 17], "3": [0, 1, 6, 10, 13, 17, 18], "step": [0, 1, 10, 13], "node_nam": [0, 1, 3, 4, 6, 10, 13], "paramet": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "contain": [0, 1, 5, 7, 13], "path": [0, 4, 5, 6, 7, 8, 9, 11, 13], "inform": [0, 2, 3, 5, 6], "default": [0, 1, 5, 6, 7, 8, 9, 10, 13], "set": [0, 1, 2, 3, 4, 5, 6, 8, 16, 17], "except": [0, 5, 9], "creat": [0, 2, 3, 4, 5, 8, 11, 13, 17, 18], "return": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 17, 18], "relation_attr": 0, "dict": [0, 1, 2, 3, 5, 6, 13], "parent_kei": [0, 1, 6, 13], "nest": [0, 1, 5, 6, 10, 13], "kei": [0, 1, 2, 3, 4, 5, 6, 13], "valu": [0, 1, 2, 3, 5, 6, 9, 13], "relation_dict": [0, 13], "diction": [0, 5], "retriev": [0, 1, 6], "tupl": [0, 1, 2, 3, 5, 9, 10, 13], "relations_list": [0, 5, 13], "extract": [1, 6], "dag_to_list": [1, 12], "dag_to_dict": [1, 12], "attr_dict": [1, 6, 13], "all_attr": [1, 6, 13], "dag_to_datafram": [1, 12], "dot": [1, 6, 13], "png": [1, 6, 13, 17, 18], "svg": [1, 6, 13], "jpeg": [1, 6, 13], "etc": [1, 5, 6], "dag_to_dot": [1, 12, 13], "name_col": [1, 5, 6, 13], "bool": [1, 2, 3, 5, 6, 7, 8], "fals": [1, 6, 8], "0": [1, 6, 13, 17, 18], "4": [1, 6, 9, 13], "5": [1, 9], "6": [1, 5], "map": [1, 6], "correspond": [1, 6], "option": [1, 5, 6, 7, 8, 10, 11], "indic": [1, 2, 3, 5, 6, 7, 8], "whether": [1, 6], "ani": [1, 2, 3, 4, 5, 6, 9], "tree": [1, 2, 7, 10, 11, 15], "union": [1, 6, 11], "rankdir": [1, 6], "tb": [1, 6], "bg_colour": [1, 6], "node_colour": [1, 6, 13, 17, 18], "edge_colour": [1, 6], "node_attr": [1, 5, 6], "edge_attr": [1, 6, 17, 18], "imag": [1, 6, 13], "posibl": [1, 6], "includ": [1, 2, 3, 6], "style": [1, 6, 13], "fillcolor": [1, 6], "shape": [1, 6], "dag_graph": 1, "file": [1, 6, 13], "write_png": [1, 6, 13, 17, 18], "tree_dag": 1, "write_dot": [1, 6], "string": [1, 5, 6, 7, 8, 13], "to_str": [1, 6], "strict": [1, 6], "digraph": [1, 6], "g": [1, 5, 6, 10, 13], "nrankdir": [1, 6], "nc": 1, "label": [1, 6, 17, 18], "na": [1, 5], "nd": 1, "nb": 1, "ne": 1, "n": [1, 6], "layout": [1, 6], "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 16, 17, 18], "bt": [1, 6], "lr": [1, 6], "rl": [1, 6], "background": [1, 6], "color": [1, 6], "fill": [1, 6], "colour": [1, 6], "edg": [1, 6, 15], "overrid": [1, 6, 8, 16, 17], "possibl": [1, 6], "gold": [1, 6, 13, 17, 18], "bold": [1, 6], "black": [1, 6], "pydot": [1, 6], "children": [2, 3, 4, 5, 6, 8, 10, 13, 16, 17], "kwarg": [2, 3, 4, 11, 17, 18], "base": [2, 3, 4, 6, 9, 10, 11, 13], "object": [2, 3, 11], "extend": [2, 3, 4, 13], "python": [2, 3, 4], "initi": [2, 3, 4, 6, 11, 13], "link": [2, 3, 4, 13], "each": [2, 3, 4, 13, 17, 18], "setter": [2, 3, 4, 13], "method": [2, 3, 4, 11, 13], "bitshift": [2, 3, 13], "oper": [2, 3, 13], "convent": [2, 3, 13], "parent_nod": [2, 3, 13], "child_nod": [2, 3, 13], "print_tre": [2, 5, 6, 7, 8, 10, 13, 16, 17, 19], "root": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 17, 18], "ag": [2, 3, 4, 5, 6, 9, 13], "90": [2, 3, 4, 5, 6, 9, 13], "65": [2, 5, 6, 9, 13], "60": [2, 5, 6, 9, 13], "40": [2, 5, 6, 9, 13], "attr_list": [2, 5, 6, 13], "directli": [2, 3, 4, 13], "pass": [2, 3, 4, 13], "argument": [2, 3, 4, 6, 9, 10, 13], "creation": [2, 3, 4], "instanti": [2, 3, 4], "i": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 16, 17], "store": [2, 3, 4], "from_dict": [2, 3, 4], "getter": [2, 3, 4], "get": [2, 3, 4, 7, 13], "ancestor": [2, 3], "exclud": [2, 3], "self": [2, 3, 4, 11, 17, 18], "iter": [2, 3, 9, 13, 20], "descend": [2, 3, 6], "leav": [2, 6, 7], "leaf": [2, 3, 5, 6], "": [2, 3, 5, 9, 10], "sibl": [2, 3, 7], "left_sibl": 2, "left": [2, 5, 10], "right_sibl": 2, "right": [2, 10], "configur": [2, 3, 4, 8], "node_path": 2, "is_root": [2, 3], "is_leaf": [2, 3], "depth": [2, 6, 9, 10], "max_depth": [2, 6, 9, 10, 13], "maximum": [2, 6, 9, 10], "avail": [2, 3, 6, 8, 13], "perform": [2, 3, 9], "constructor": [2, 3], "describ": [2, 3], "sort": [2, 3, 10], "get_attr": [2, 3], "attr_nam": [2, 3, 9], "set_attr": [2, 3], "attr": [2, 3], "copi": [2, 3, 7, 8, 13], "deep": [2, 3], "properti": [2, 3, 4, 17, 18], "yield": [2, 3], "doe": [2, 3], "clone": [2, 3, 7, 13], "a_copi": [2, 3], "int": [2, 6, 9, 10], "index": 2, "start": [2, 5, 6, 13], "exclude_attribut": [2, 3], "exclude_prefix": [2, 3], "prefix": [2, 3], "classmethod": [2, 3], "input_dict": [2, 3], "construct": [2, 3, 12, 16, 17, 18, 19], "input": [2, 3, 5, 8, 10], "exist": [2, 3, 5, 7, 8, 13, 16, 17], "do": [2, 3, 7, 9, 21], "allow": [2, 3, 5], "access": [2, 3, 4], "dag": [3, 10], "implement": [3, 11, 13], "In": [3, 16, 17], "multipl": [3, 5, 8, 9, 13], "onli": [3, 5, 6, 7, 13, 16, 17, 18], "ha": [3, 11], "one": [3, 8, 13, 16, 17, 18], "without": [3, 4, 8, 9], "basenod": [4, 7, 9, 10, 13, 14], "an": [4, 13], "extens": 4, "abl": [4, 6, 8, 13], "sep": [4, 5, 7, 8], "separ": [4, 5, 7, 8, 9, 16, 17], "path_nam": [4, 5, 6, 9], "To": [5, 16, 17, 21], "decid": 5, "which": [5, 6, 13], "consid": 5, "your": 5, "full": [5, 7, 9, 13], "list_to_tre": [5, 10, 13, 19], "list_to_tree_by_rel": [5, 13, 19], "dict_to_tre": [5, 13, 19], "nested_dict_to_tre": [5, 13, 19], "dataframe_to_tre": [5, 13, 19], "dataframe_to_tree_by_rel": [5, 13, 19], "add_path_to_tre": [5, 19], "add_dict_to_tree_by_path": [5, 19], "add_dict_to_tree_by_nam": [5, 19], "add_dataframe_to_tree_by_path": [5, 19], "add_dataframe_to_tree_by_nam": [5, 19], "ad": [5, 7, 11, 13], "previous": 5, "did": 5, "join_typ": 5, "new": [5, 8, 11], "taken": 5, "ignor": 5, "same": [5, 6, 7, 8, 10], "share": 5, "name_data": 5, "path_col": [5, 6, 13], "join": 5, "inner": 5, "drop": 5, "duplicate_name_allow": 5, "true": [5, 6, 7, 8, 9, 10, 13, 16, 17], "place": [5, 8], "should": [5, 6, 7, 17, 18], "For": [5, 6, 7, 8, 13], "exampl": [5, 7, 16, 17], "refer": [5, 7], "differ": [5, 7, 13], "anoth": [5, 6, 7, 8, 13], "path_data": [5, 13], "35": [5, 6, 13], "f": [5, 6, 10, 13], "38": 5, "10": 5, "h": [5, 10, 13], "duplic": 5, "path_attr": 5, "name_dict": 5, "path_dict": [5, 13], "sinc": [5, 17, 18], "mai": 5, "repeat": 5, "confus": 5, "path_list": [5, 10], "name_kei": [5, 6, 13], "child_kei": [5, 6], "recurs": [5, 6, 10, 13], "command": [6, 13], "line": [6, 13], "yield_tre": [6, 19], "tree_to_dict": [6, 13, 19], "tree_to_nested_dict": [6, 13, 19], "tree_to_datafram": [6, 13, 19], "tree_to_dot": [6, 13, 17, 18, 19], "while": 6, "determin": 6, "what": 6, "skip": [6, 8], "subtre": [6, 10], "skip_depth": 6, "leaf_onli": 6, "node_name_or_path": [6, 13], "attr_omit_nul": 6, "attr_bracket": 6, "const": [6, 13], "custom_styl": 6, "print": [6, 11], "consol": [6, 11, 13], "select": 6, "result": [6, 9], "choos": 6, "show": [6, 7, 11, 13], "attr_name_filt": 6, "omit": 6, "null": 6, "open": 6, "close": 6, "bracket": 6, "shown": [6, 10], "ansi": [6, 13], "ascii": [6, 13], "round": [6, 13], "doubl": [6, 13], "user": [6, 13], "own": 6, "stem": 6, "branch": 6, "final": 6, "icon": 6, "symbol": [6, 8, 9], "number": [6, 9], "charact": 6, "sub": [6, 13], "const_bold": [6, 13], "becom": 6, "abstract": 6, "when": 6, "person": [6, 13], "subset": 6, "na0": 6, "nb0": 6, "b0": 6, "nd0": 6, "d0": 6, "ne0": 6, "e0": 6, "nc0": 6, "c0": 6, "undirect": 6, "gener": [6, 9, 10, 11, 13, 17, 18], "come": 7, "handi": 7, "clone_tre": [7, 13, 19], "need": [7, 13], "simpli": [7, 17, 18], "inherit": 7, "get_tree_diff": [7, 13, 19], "other_tre": 7, "only_diff": 7, "chang": 7, "rel": 7, "origin": [7, 8], "root_oth": [7, 8, 13], "b_other": [7, 13], "tree_diff": [7, 13], "compar": [7, 13], "against": 7, "subtract": 7, "prune_tre": [7, 13, 19], "prune_path": 7, "prune": [7, 13], "along": 7, "remov": [7, 8, 11, 13], "partial": [7, 8, 9, 13], "trail": [7, 8, 9], "part": [7, 8, 9], "root_prun": [7, 13], "shift": [8, 11, 13], "within": 8, "between": [8, 13], "two": [8, 10, 13, 16, 17], "from_path": [8, 13, 16, 17], "to_path": [8, 13, 16, 17], "There": [8, 13], "sever": 8, "more": [8, 9], "custom": [8, 9, 13], "skippabl": 8, "cannot": 8, "found": [8, 9], "merge_children": [8, 16, 17], "merg": [8, 15], "intermedi": 8, "error": 8, "alwai": 8, "thrown": 8, "descript": [8, 10, 11, 13], "delet": 8, "copy_nod": [8, 13, 19], "present": [8, 11], "overridden": 8, "lead": [8, 9], "empti": 8, "happen": 8, "dummi": [8, 13], "appli": 8, "clash": 8, "copy_nodes_from_tree_to_tre": [8, 13, 16, 17, 19], "from_tre": [8, 13, 16, 17], "to_tre": [8, 13, 16, 17], "els": [8, 11], "aa": [8, 13], "copy_or_shift_log": [8, 19], "shift_nod": [8, 13, 19], "One": [9, 13], "find": [9, 13, 19], "findal": [9, 13, 19], "find_nam": [9, 13, 19], "find_children": [9, 19], "find_path": [9, 13, 19], "find_full_path": [9, 13, 19], "find_attr": [9, 13, 19], "condit": [9, 10, 13], "callabl": [9, 10], "singl": [9, 13], "match": 9, "lambda": [9, 10, 13], "traceback": 9, "most": 9, "recent": 9, "call": 9, "last": 9, "util": [9, 10], "searcherror": 9, "expect": 9, "less": 9, "than": 9, "element": 9, "evalu": [9, 10], "attr_valu": 9, "work": 9, "similar": [9, 16, 17], "faster": 9, "min_count": 9, "max_count": 9, "62": 9, "check": 9, "minimum": 9, "occurr": 9, "rais": 9, "meet": 9, "structur": [10, 13, 16, 17], "algorithm": 10, "pre": [10, 13], "order": [10, 13], "travers": [10, 13], "search": [10, 19], "nlr": 10, "post": [10, 13], "lrn": 10, "level": [10, 11, 13], "breadth": 10, "group": [10, 13], "through": 10, "least": 10, "visit": 10, "current": 10, "levelorder_it": [10, 20], "filter_condit": 10, "stop_condit": 10, "stop": 10, "levelordergroup_it": [10, 20], "postorder_it": [10, 20], "preorder_it": [10, 20], "It": [10, 13], "topolog": 10, "becaus": 10, "process": 10, "befor": 10, "its": 10, "x": 10, "workflow": [11, 13], "app_todo": 11, "apptodo": [11, 13, 21], "app_nam": 11, "big": 11, "three": 11, "item": [11, 13], "given": 11, "assign": 11, "add_item": [11, 13], "item_nam": [11, 13], "homework": [11, 13], "list_nam": [11, 13], "school": [11, 13], "milk": [11, 13], "bread": [11, 13], "groceri": [11, 13], "urgent": [11, 13], "cook": [11, 13], "reorder": [11, 13], "prioritize_list": 11, "prioritize_item": 11, "remove_item": 11, "export": [11, 12, 19], "save": [11, 13], "json": [11, 13], "app2": [11, 13], "load": [11, 13], "add_list": 11, "static": 11, "json_path": 11, "priorit": [11, 13], "app": [13, 21], "tip": [13, 15], "trick": [13, 15], "integr": 13, "make": 13, "easi": 13, "learn": 13, "mani": 13, "github": 13, "changelog": 13, "issu": 13, "pypi": 13, "articl": 13, "you": 13, "want": [13, 17, 18], "support": 13, "segment": 13, "consist": 13, "8": 13, "main": 13, "locat": 13, "destin": 13, "defin": [13, 17, 18], "sampl": 13, "run": 13, "prompt": 13, "pip": 13, "requir": 13, "addit": 13, "brew": 13, "gprof2dot": 13, "here": 13, "some": 13, "code": 13, "asset": [13, 17, 18], "altern": 13, "we": [13, 16, 17, 18], "either": 13, "alreadi": 13, "still": 13, "after": 13, "view": 13, "attr_bracket_open": 13, "attr_bracket_clos": 13, "style_stem": 13, "style_branch": 13, "style_stem_fin": 13, "also": 13, "demo_dag": 13, "showcas": 13, "how": 13, "them": 13, "extern": 13, "weight": 15, "modifi": [16, 17, 19], "modul": [16, 17], "thi": [16, 17], "both": [16, 17], "retain": [16, 17], "long": [16, 17], "desir": [16, 17], "instead": [16, 17], "root1": [16, 17], "b1": [16, 17], "c1": [16, 17], "d1": [16, 17], "b2": [16, 17], "e2": [16, 17], "valid": [16, 17], "howev": [17, 18], "plot": [17, 18], "weightednod": [17, 18], "def": [17, 18], "__init__": [17, 18], "super": [17, 18], "weighted_tre": [17, 18], "helper": 19}, "objects": {"bigtree.dag": [[0, 0, 0, "-", "construct"], [1, 0, 0, "-", "export"]], "bigtree.dag.construct": [[0, 1, 1, "", "dataframe_to_dag"], [0, 1, 1, "", "dict_to_dag"], [0, 1, 1, "", "list_to_dag"]], "bigtree.dag.export": [[1, 1, 1, "", "dag_to_dataframe"], [1, 1, 1, "", "dag_to_dict"], [1, 1, 1, "", "dag_to_dot"], [1, 1, 1, "", "dag_to_list"]], "bigtree.node": [[2, 0, 0, "-", "basenode"], [3, 0, 0, "-", "dagnode"], [4, 0, 0, "-", "node"]], "bigtree.node.basenode": [[2, 2, 1, "", "BaseNode"]], "bigtree.node.basenode.BaseNode": [[2, 3, 1, "", "ancestors"], [2, 3, 1, "", "children"], [2, 4, 1, "", "copy"], [2, 3, 1, "", "depth"], [2, 3, 1, "", "descendants"], [2, 4, 1, "", "describe"], [2, 4, 1, "", "from_dict"], [2, 4, 1, "", "get_attr"], [2, 3, 1, "", "is_leaf"], [2, 3, 1, "", "is_root"], [2, 3, 1, "", "leaves"], [2, 3, 1, "", "left_sibling"], [2, 3, 1, "", "max_depth"], [2, 3, 1, "", "node_path"], [2, 3, 1, "", "parent"], [2, 3, 1, "", "parents"], [2, 3, 1, "", "right_sibling"], [2, 3, 1, "", "root"], [2, 4, 1, "", "set_attrs"], [2, 3, 1, "", "siblings"]], "bigtree.node.dagnode": [[3, 2, 1, "", "DAGNode"]], "bigtree.node.dagnode.DAGNode": [[3, 3, 1, "", "ancestors"], [3, 3, 1, "", "children"], [3, 4, 1, "", "copy"], [3, 3, 1, "", "descendants"], [3, 4, 1, "", "describe"], [3, 4, 1, "", "from_dict"], [3, 4, 1, "", "get_attr"], [3, 3, 1, "", "is_leaf"], [3, 3, 1, "", "is_root"], [3, 3, 1, "", "node_name"], [3, 3, 1, "", "parent"], [3, 3, 1, "", "parents"], [3, 4, 1, "", "set_attrs"], [3, 3, 1, "", "siblings"]], "bigtree.node.node": [[4, 2, 1, "", "Node"]], "bigtree.node.node.Node": [[4, 3, 1, "", "node_name"], [4, 3, 1, "", "path_name"], [4, 3, 1, "", "sep"]], "bigtree.tree": [[5, 0, 0, "-", "construct"], [6, 0, 0, "-", "export"], [7, 0, 0, "-", "helper"], [8, 0, 0, "-", "modify"], [9, 0, 0, "-", "search"]], "bigtree.tree.construct": [[5, 1, 1, "", "add_dataframe_to_tree_by_name"], [5, 1, 1, "", "add_dataframe_to_tree_by_path"], [5, 1, 1, "", "add_dict_to_tree_by_name"], [5, 1, 1, "", "add_dict_to_tree_by_path"], [5, 1, 1, "", "add_path_to_tree"], [5, 1, 1, "", "dataframe_to_tree"], [5, 1, 1, "", "dataframe_to_tree_by_relation"], [5, 1, 1, "", "dict_to_tree"], [5, 1, 1, "", "list_to_tree"], [5, 1, 1, "", "list_to_tree_by_relation"], [5, 1, 1, "", "nested_dict_to_tree"]], "bigtree.tree.export": [[6, 1, 1, "", "print_tree"], [6, 1, 1, "", "tree_to_dataframe"], [6, 1, 1, "", "tree_to_dict"], [6, 1, 1, "", "tree_to_dot"], [6, 1, 1, "", "tree_to_nested_dict"], [6, 1, 1, "", "yield_tree"]], "bigtree.tree.helper": [[7, 1, 1, "", "clone_tree"], [7, 1, 1, "", "get_tree_diff"], [7, 1, 1, "", "prune_tree"]], "bigtree.tree.modify": [[8, 1, 1, "", "copy_nodes"], [8, 1, 1, "", "copy_nodes_from_tree_to_tree"], [8, 1, 1, "", "copy_or_shift_logic"], [8, 1, 1, "", "shift_nodes"]], "bigtree.tree.search": [[9, 1, 1, "", "find"], [9, 1, 1, "", "find_attr"], [9, 1, 1, "", "find_attrs"], [9, 1, 1, "", "find_children"], [9, 1, 1, "", "find_full_path"], [9, 1, 1, "", "find_name"], [9, 1, 1, "", "find_names"], [9, 1, 1, "", "find_path"], [9, 1, 1, "", "find_paths"], [9, 1, 1, "", "findall"]], "bigtree.utils": [[10, 0, 0, "-", "iterators"]], "bigtree.utils.iterators": [[10, 1, 1, "", "dag_iterator"], [10, 1, 1, "", "levelorder_iter"], [10, 1, 1, "", "levelordergroup_iter"], [10, 1, 1, "", "postorder_iter"], [10, 1, 1, "", "preorder_iter"]], "bigtree.workflows": [[11, 0, 0, "-", "app_todo"]], "bigtree.workflows.app_todo": [[11, 2, 1, "", "AppToDo"]], "bigtree.workflows.app_todo.AppToDo": [[11, 4, 1, "", "add_item"], [11, 4, 1, "", "add_list"], [11, 4, 1, "", "load"], [11, 4, 1, "", "prioritize_item"], [11, 4, 1, "", "prioritize_list"], [11, 4, 1, "", "remove_item"], [11, 4, 1, "", "save"], [11, 4, 1, "", "show"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"]}, "titleterms": {"construct": [0, 5, 13], "dag": [0, 1, 12, 13], "method": [0, 1, 5, 6, 9, 10], "export": [1, 6, 13], "basenod": 2, "dagnod": 3, "node": [4, 14], "tree": [5, 6, 8, 9, 13, 16, 17, 18, 19], "add": 5, "attribut": 5, "custom": 6, "helper": [7, 13], "modifi": [8, 13], "sampl": 8, "modif": 8, "search": [9, 13], "iter": 10, "To": [11, 13], "do": [11, 13], "app": 11, "direct": 12, "acycl": 12, "graph": 12, "big": 13, "document": 13, "python": 13, "packag": 13, "compon": 13, "instal": 13, "demonstr": 13, "print": 13, "util": [13, 20], "demo": 13, "usag": 13, "applic": 13, "other": 15, "merg": [16, 17], "tip": 17, "trick": 17, "weight": [17, 18], "edg": [17, 18], "workflow": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"\u2728 Construct": [[0, "sparkles-construct"], [5, "sparkles-construct"]], "DAG Construct Methods": [[0, "id1"]], "\ud83d\udd28 Export": [[1, "hammer-export"], [6, "hammer-export"]], "DAG Export Methods": [[1, "id1"]], "\ud83c\udf31 BaseNode": [[2, "module-bigtree.node.basenode"]], "\ud83c\udf3c DAGNode": [[3, "module-bigtree.node.dagnode"]], "\ud83c\udf3a Node": [[4, "module-bigtree.node.node"]], "Tree Construct Methods": [[5, "id1"]], "Tree Add Attributes Methods": [[5, "id2"]], "Tree Export Methods": [[6, "id1"]], "Tree Export Customizations": [[6, "id2"]], "\ud83d\udd27 Helper": [[7, "wrench-helper"]], "\ud83d\udcdd Modify": [[8, "memo-modify"]], "Sample Tree Modification": [[8, "id1"]], "\ud83d\udd0d Search": [[9, "mag-search"]], "Tree Search Methods": [[9, "id1"]], "\u27b0 Iterators": [[10, "curly-loop-iterators"]], "Iterator Methods": [[10, "id1"]], "\u2714\ufe0f To Do App": [[11, "module-bigtree.workflows.app_todo"]], "Directed Acyclic Graph (DAG)": [[12, "directed-acyclic-graph-dag"]], "\ud83c\udf33 Big Tree Documentation": [[13, "deciduous-tree-big-tree-documentation"]], "Big Tree Python Package": [[13, "big-tree-python-package"]], "Components": [[13, "components"]], "Installation": [[13, "installation"]], "Tree Demonstration": [[13, "tree-demonstration"]], "Construct Tree": [[13, "construct-tree"]], "Print Tree": [[13, "print-tree"]], "Modify Tree": [[13, "modify-tree"]], "Tree Search": [[13, "tree-search"]], "Helper Utility": [[13, "helper-utility"]], "Export Tree": [[13, "export-tree"]], "DAG Demonstration": [[13, "dag-demonstration"]], "Construct DAG": [[13, "construct-dag"]], "Demo Usage": [[13, "demo-usage"]], "To Do Application": [[13, "to-do-application"]], "Node": [[14, "node"]], "Others": [[15, "others"]], "Merging Trees": [[16, "merging-trees"], [17, "merging-trees"]], "\ud83d\udca1 Tips and Tricks": [[17, "bulb-tips-and-tricks"]], "Trees with Weighted Edges": [[17, "trees-with-weighted-edges"], [18, "trees-with-weighted-edges"]], "Tree": [[19, "tree"]], "Utils": [[20, "utils"]], "Workflows": [[21, "workflows"]]}, "indexentries": {"bigtree.dag.construct": [[0, "module-bigtree.dag.construct"]], "dataframe_to_dag() (in module bigtree.dag.construct)": [[0, "bigtree.dag.construct.dataframe_to_dag"]], "dict_to_dag() (in module bigtree.dag.construct)": [[0, "bigtree.dag.construct.dict_to_dag"]], "list_to_dag() (in module bigtree.dag.construct)": [[0, "bigtree.dag.construct.list_to_dag"]], "module": [[0, "module-bigtree.dag.construct"], [1, "module-bigtree.dag.export"], [2, "module-bigtree.node.basenode"], [3, "module-bigtree.node.dagnode"], [4, "module-bigtree.node.node"], [5, "module-bigtree.tree.construct"], [6, "module-bigtree.tree.export"], [7, "module-bigtree.tree.helper"], [8, "module-bigtree.tree.modify"], [9, "module-bigtree.tree.search"], [10, "module-bigtree.utils.iterators"], [11, "module-bigtree.workflows.app_todo"]], "bigtree.dag.export": [[1, "module-bigtree.dag.export"]], "dag_to_dataframe() (in module bigtree.dag.export)": [[1, "bigtree.dag.export.dag_to_dataframe"]], "dag_to_dict() (in module bigtree.dag.export)": [[1, "bigtree.dag.export.dag_to_dict"]], "dag_to_dot() (in module bigtree.dag.export)": [[1, "bigtree.dag.export.dag_to_dot"]], "dag_to_list() (in module bigtree.dag.export)": [[1, "bigtree.dag.export.dag_to_list"]], "basenode (class in bigtree.node.basenode)": [[2, "bigtree.node.basenode.BaseNode"]], "ancestors (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.ancestors"]], "bigtree.node.basenode": [[2, "module-bigtree.node.basenode"]], "children (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.children"]], "copy() (bigtree.node.basenode.basenode method)": [[2, "bigtree.node.basenode.BaseNode.copy"]], "depth (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.depth"]], "descendants (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.descendants"]], "describe() (bigtree.node.basenode.basenode method)": [[2, "bigtree.node.basenode.BaseNode.describe"]], "from_dict() (bigtree.node.basenode.basenode class method)": [[2, "bigtree.node.basenode.BaseNode.from_dict"]], "get_attr() (bigtree.node.basenode.basenode method)": [[2, "bigtree.node.basenode.BaseNode.get_attr"]], "is_leaf (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.is_leaf"]], "is_root (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.is_root"]], "leaves (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.leaves"]], "left_sibling (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.left_sibling"]], "max_depth (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.max_depth"]], "node_path (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.node_path"]], "parent (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.parent"]], "parents (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.parents"]], "right_sibling (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.right_sibling"]], "root (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.root"]], "set_attrs() (bigtree.node.basenode.basenode method)": [[2, "bigtree.node.basenode.BaseNode.set_attrs"]], "siblings (bigtree.node.basenode.basenode property)": [[2, "bigtree.node.basenode.BaseNode.siblings"]], "dagnode (class in bigtree.node.dagnode)": [[3, "bigtree.node.dagnode.DAGNode"]], "ancestors (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.ancestors"]], "bigtree.node.dagnode": [[3, "module-bigtree.node.dagnode"]], "children (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.children"]], "copy() (bigtree.node.dagnode.dagnode method)": [[3, "bigtree.node.dagnode.DAGNode.copy"]], "descendants (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.descendants"]], "describe() (bigtree.node.dagnode.dagnode method)": [[3, "bigtree.node.dagnode.DAGNode.describe"]], "from_dict() (bigtree.node.dagnode.dagnode class method)": [[3, "bigtree.node.dagnode.DAGNode.from_dict"]], "get_attr() (bigtree.node.dagnode.dagnode method)": [[3, "bigtree.node.dagnode.DAGNode.get_attr"]], "is_leaf (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.is_leaf"]], "is_root (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.is_root"]], "node_name (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.node_name"]], "parent (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.parent"]], "parents (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.parents"]], "set_attrs() (bigtree.node.dagnode.dagnode method)": [[3, "bigtree.node.dagnode.DAGNode.set_attrs"]], "siblings (bigtree.node.dagnode.dagnode property)": [[3, "bigtree.node.dagnode.DAGNode.siblings"]], "node (class in bigtree.node.node)": [[4, "bigtree.node.node.Node"]], "bigtree.node.node": [[4, "module-bigtree.node.node"]], "node_name (bigtree.node.node.node property)": [[4, "bigtree.node.node.Node.node_name"]], "path_name (bigtree.node.node.node property)": [[4, "bigtree.node.node.Node.path_name"]], "sep (bigtree.node.node.node property)": [[4, "bigtree.node.node.Node.sep"]], "add_dataframe_to_tree_by_name() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.add_dataframe_to_tree_by_name"]], "add_dataframe_to_tree_by_path() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.add_dataframe_to_tree_by_path"]], "add_dict_to_tree_by_name() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.add_dict_to_tree_by_name"]], "add_dict_to_tree_by_path() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.add_dict_to_tree_by_path"]], "add_path_to_tree() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.add_path_to_tree"]], "bigtree.tree.construct": [[5, "module-bigtree.tree.construct"]], "dataframe_to_tree() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.dataframe_to_tree"]], "dataframe_to_tree_by_relation() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.dataframe_to_tree_by_relation"]], "dict_to_tree() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.dict_to_tree"]], "list_to_tree() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.list_to_tree"]], "list_to_tree_by_relation() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.list_to_tree_by_relation"]], "nested_dict_to_tree() (in module bigtree.tree.construct)": [[5, "bigtree.tree.construct.nested_dict_to_tree"]], "bigtree.tree.export": [[6, "module-bigtree.tree.export"]], "print_tree() (in module bigtree.tree.export)": [[6, "bigtree.tree.export.print_tree"]], "tree_to_dataframe() (in module bigtree.tree.export)": [[6, "bigtree.tree.export.tree_to_dataframe"]], "tree_to_dict() (in module bigtree.tree.export)": [[6, "bigtree.tree.export.tree_to_dict"]], "tree_to_dot() (in module bigtree.tree.export)": [[6, "bigtree.tree.export.tree_to_dot"]], "tree_to_nested_dict() (in module bigtree.tree.export)": [[6, "bigtree.tree.export.tree_to_nested_dict"]], "yield_tree() (in module bigtree.tree.export)": [[6, "bigtree.tree.export.yield_tree"]], "bigtree.tree.helper": [[7, "module-bigtree.tree.helper"]], "clone_tree() (in module bigtree.tree.helper)": [[7, "bigtree.tree.helper.clone_tree"]], "get_tree_diff() (in module bigtree.tree.helper)": [[7, "bigtree.tree.helper.get_tree_diff"]], "prune_tree() (in module bigtree.tree.helper)": [[7, "bigtree.tree.helper.prune_tree"]], "bigtree.tree.modify": [[8, "module-bigtree.tree.modify"]], "copy_nodes() (in module bigtree.tree.modify)": [[8, "bigtree.tree.modify.copy_nodes"]], "copy_nodes_from_tree_to_tree() (in module bigtree.tree.modify)": [[8, "bigtree.tree.modify.copy_nodes_from_tree_to_tree"]], "copy_or_shift_logic() (in module bigtree.tree.modify)": [[8, "bigtree.tree.modify.copy_or_shift_logic"]], "shift_nodes() (in module bigtree.tree.modify)": [[8, "bigtree.tree.modify.shift_nodes"]], "bigtree.tree.search": [[9, "module-bigtree.tree.search"]], "find() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find"]], "find_attr() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_attr"]], "find_attrs() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_attrs"]], "find_children() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_children"]], "find_full_path() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_full_path"]], "find_name() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_name"]], "find_names() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_names"]], "find_path() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_path"]], "find_paths() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.find_paths"]], "findall() (in module bigtree.tree.search)": [[9, "bigtree.tree.search.findall"]], "bigtree.utils.iterators": [[10, "module-bigtree.utils.iterators"]], "dag_iterator() (in module bigtree.utils.iterators)": [[10, "bigtree.utils.iterators.dag_iterator"]], "levelorder_iter() (in module bigtree.utils.iterators)": [[10, "bigtree.utils.iterators.levelorder_iter"]], "levelordergroup_iter() (in module bigtree.utils.iterators)": [[10, "bigtree.utils.iterators.levelordergroup_iter"]], "postorder_iter() (in module bigtree.utils.iterators)": [[10, "bigtree.utils.iterators.postorder_iter"]], "preorder_iter() (in module bigtree.utils.iterators)": [[10, "bigtree.utils.iterators.preorder_iter"]], "apptodo (class in bigtree.workflows.app_todo)": [[11, "bigtree.workflows.app_todo.AppToDo"]], "add_item() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.add_item"]], "add_list() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.add_list"]], "bigtree.workflows.app_todo": [[11, "module-bigtree.workflows.app_todo"]], "load() (bigtree.workflows.app_todo.apptodo static method)": [[11, "bigtree.workflows.app_todo.AppToDo.load"]], "prioritize_item() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.prioritize_item"]], "prioritize_list() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.prioritize_list"]], "remove_item() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.remove_item"]], "save() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.save"]], "show() (bigtree.workflows.app_todo.apptodo method)": [[11, "bigtree.workflows.app_todo.AppToDo.show"]]}})